;---------------------------------------------------------------------
apply_changes:
  ret

;---------------------------------------------------------------------
; the following data statements define a form for user input.
; One screen of data is displayed and filled in by user.
; Routine form_engine is called to process the display_tbl
;
; A form uses one screen.  It is defined by normal ascii
; text with embedded control characters.  The control characters
; are:
;    0 - end of table          5 - blank rest of screen
;    1 - color normal          6 - string, block# follows
;    2 - color field           7 - key, key# follows
;    3 - color active field    8 - process, process# follows
;    4 - color button          9 - end of line (eol)
;
; For more information see equates.
;
; As the user types or moves the mouse to fill out the
; form, all data is stored in the form.  Upon exit the
; form can be scanned by caller to obtain the data.
;
; string data will be stored in the table as entered.
; button selection is indicated by color code.  When selected
; the code "3" will indicate this button was selected.
;
; table codes use negative byte values in secondary
; fields, thus, ascii characters in range of 80h+ are not available
; as text.
;----------------------------------------------------------------------

; ----------  embedded codes --------
norm_color	equ	1	;normal text
field_color	equ	2
selected_color	equ	3	;used for selected buttons
button_color	equ	4	;used for unselected buttons
blank_rows	equ	5	;blank all rows to bottom of screen
string		equ	6	;string block# follows, block1 is -1
key		equ	7	;key# follows, alt keys alt-a is -1
process		equ	8	;process# follows, process1 = -1
eol		equ	9	;end of data for this line.

; ---------- keys ------------------
alt_a		equ	-1	;code for key alt-a
alt_b		equ	-2
alt_c		equ	-3
alt_d		equ	-4
alt_e		equ	-5
alt_f		equ	-6
alt_g		equ	-7
alt_h		equ	-8
alt_i		equ	-9
alt_j		equ	-10
alt_k		equ	-11
alt_l		equ	-12
alt_m		equ	-13
alt_n		equ	-14
alt_o		equ	-15
alt_p		equ	-16
alt_q		equ	-17
alt_r		equ	-18
alt_s		equ	-19
alt_t		equ	-20
alt_u		equ	-21
alt_v		equ	-22
alt_w		equ	-23
alt_x		equ	-24
alt_y		equ	-25
alt_z		equ	-26

; --------- process numbers -------------------
process_string	equ	-1	;string entry, call string handler
process_button	equ	-2	;select button, call single button process
process_buttons	equ	-3	;select only this button on this line, process
null_process	equ	-4	;do nothing
return_0	equ	-5	;exit program and return code 0
return_1	equ	-6	;exit program and return code 1
;  etc.

;--------- string codes to select def block ----
str_blk1	equ	-1	;string descriptive block #
str_blk2	equ	-2
str_blk3	equ	-3
str_blk4	equ	-4
str_blk5	equ	-5
; etc.

;------- order of codes --------
; the codes are optional and can be combined to define
; a button or string.  When combined they must be in the
; following order:
;
;    string code - key code - process code - color - text - eol
;
;------ button example ------------
; db 7,-14	;use alt-n key for this button
; db 8,-2	;this button toggles, does not react with other buttons on line
; db 4		;use button color
; db "button"	;text for button is -button-
; db 1		;switch back to normal color to end button
;
;***********************************************************************
; the form table is next
;***********************************************************************

 [section .data]

; table pointers ---------

table_pointers:
	dd	apply_changes		;not used
	dd	edit_color		;colors
	dd	string_block1		;strings
	dd	display_tbl		;display table

; ----------- colors ---------------
; colors = aaxxffbb  (aa-attribute ff-foreground  bb-background)
;   30-black 31-red 32-green 33-brown 34-blue 35-purple 36-cyan 37-grey
;   attributes 30-normal 31-bold 34-underscore 37-inverse

edit_color		dd	30003734h	;used for normal text
edit_field_color	dd	31003734h	;modifable/slectable field
edit_entry_color	dd	31003336h	;current selection
edit_button_color	dd	30003436h	;buttons and active edit field
;norm_text_color	dd 30003734h ;used for inactive window
;			     ;grey-foreground=7 blue-backgound=4 0=norm attr
;bold_edit_color	dd 31003734h ;used for active window in edit mode
;			     ;grey-foreground=7 blue-backgound=4 0=bold attr
;bold_cmd_color	dd 31003334h ;used for active window in command mode
;			     ;grey-foreground=7 blue-backgound=4 0=bold attr
;high_text_color	dd 31003634h ;used for highlighting block
;			     ;grey-foreground=7 blue-backgound=4 0=inver attr
;asm_text_color	dd 31003234h ;used to highlight comments ";"
;			     ;cyan-foreground=6 blue-backgound=4 0=norm attr
;status_color	dd 30003036h ;used for status line
;status_color1	dd 31003336h ;used for special data on status line
;status_color2	dd 31003331h ;used for error messags or macro record
;exit_screen_color dd 31003334h ;used for error messags on status line

;---------------------------------------------------------------------
; Each string entry field needs a descriptor block.  The codes 6,-1
; specify block #1
;
string_block1:
buf1_ptr	dd	buf1	;buffer ptr
field_len1	dd	buf1_len			;allocate extra byte in form for handlers
color_ptr1	dd	edit_entry_color
blk1_row	db	11
blk1_column	db	buf1_column 
blk1_flag	db	0
blk1_cursor	db	buf1_column

string_block2:
buf2_ptr	dd	buf2	;buffer ptr
field_len2	dd	buf2_len			;allocate extra byte in form for handlers
color_ptr2	dd	edit_entry_color
blk2_row	db	11
blk2_column	db	buf2_column
blk2_flag	db	0
blk2_cursor	db	buf2_column

		times 16 db 0	;block 3
;		times 16 db 0	;4
;		times 16 db 0	;5
;		times 16 db 0	;6
;		times 16 db 0	;7
;		times 16 db 0	;8
;		times 16 db 0	;9
;		times 16 db 0	;10
;		times 16 db 0	;11
;		times 16 db 0	;12
;		times 16 db 0	;13
;		times 16 db 0	;14
;		times 16 db 0	;15
;		times 16 db 0	;16
;		times 16 db 0	;17
;		times 16 db 0	;18
;		times 16 db 0	;block 19
;		times 16 db 0	;20

;----------------------------------------------------------------
; The screen form follows.
	   db process,null_process,eol	;null process definition to trap errant mice
display_tbl:

line01: db norm_color
	db 'Name: '
	db field_color
line01_name_insert: times 30 db ' '
	db  eol			;end of line

line02: db norm_color,'Path: ',field_color
line02_path_insert: times 100 db ' '
	db  eol

line03: db norm_color,'Symlink: ',field_color
line03_symlink_insert: times 100 db ' '
	db  eol

line04: db norm_color,'Type: '
line04_normal: db norm_color,'Normal-file'
	db norm_color,'  '
line04_dir: db  norm_color,'Directory'
	db norm_color
	db '  '
line04_symlink: db norm_color,'Symlink'
	db norm_color,eol

line05: db 'Length: ',field_color
line05_length: times 10 db ' '
	db norm_color,eol

line06: db 'Last Update: ',field_color
line06_t1: times 40 db ' ',norm_color
	db eol

line07: db 'Last Access: ',field_color
line07_t2: times 40 db ' ',norm_color
	db eol

line08: db 'Last Statm : ',field_color
line08_t3: times 40 db ' ',norm_color
	db eol

line09: db eol

line10: db '         |  OWNER(o)    |  GROUP(r)    |   OTHER      |',eol

line11:
        db norm_color
buf1_header_start:
	db '         |'
buf1_header_end:
	db string,str_blk1,key,alt_o,process,process_string,button_color
buf1: 	db '              '
buf1_end:
buf1_len  equ	buf1_end - buf1
	db norm_color
buf1_column equ (buf1_header_end - buf1_header_start) +1
buf2_header_start:
        db '|'
buf2_header_end:
	db string,str_blk2,key,alt_r,process,process_string,button_color
buf2: 	db '              '
buf2_len  equ	$ - buf2
buf2_column equ buf1_column + buf1_len + (buf2_header_end - buf2_header_start)
	   db norm_color,'|              |'
	db eol

	db '-------------------------------------------------------',eol

line12: db 'read     |   '
	db ' (a)',key,alt_a,process,process_button
line12_a: db button_color,' X ',norm_color,'    |  '
	db ' (b)',key,alt_b,process,process_button
line12_b: db button_color,' X ',norm_color,'     |  '
	db ' (c)',key,alt_c,process,process_button
line12_c: db button_color,' X ',norm_color,'     |  ',eol

line13: db 'write    |   '
	db ' (d)',key,alt_d,process,process_button
line13_d: db button_color,' X ',norm_color,'    |  '
	db ' (e)',key,alt_e,process,process_button
line13_e: db button_color,' X ',norm_color,'     |  '
	db ' (f)',key,alt_f,process,process_button
line13_f: db button_color,' X ',norm_color,'     |  ',eol

line14: db 'execute  |   '
	db ' (g)',key,alt_g,process,process_button
line14_g: db button_color,' X ',norm_color,'    |  '
	db ' (h)',key,alt_h,process,process_button
line14_h: db button_color,' X ',norm_color,'     |  '
	db ' (i)',key,alt_i,process,process_button
line14_i: db button_color,' X ',norm_color,'     |  ',eol

line15: db 'ID       |   '
	db ' (j)',key,alt_j,process,process_button
line15_j: db button_color,'UID',norm_color,'    |  '
	db ' (k)',key,alt_k,process,process_button
line15_k: db button_color,'GID',norm_color,'     |  '
	db ' (l)',key,alt_l,process,process_button
line15_l: db button_color,'sticky',norm_color,'  |  ',eol

line16:	db eol

line17: db 'Program ',field_color,'file',norm_color
        db ' reports:',eol

captured_text:
line18:  times 100 db ' '
	db eol
line19:  times 100 db ' '
	db eol

line21: db  eol
line22: db  eol

line23: db '  ',key,alt_p,process,process_button
apply_ck1 db button_color,'apply changes',norm_color
	db '   ',key,alt_z,process,return_0,button_color,'exit status',norm_color
	db '  ','note: all letter commands are preceeded',eol

line24: db '  ',key,alt_p,process,process_button
apply_ck2 db button_color,'   (alt-p)   ',norm_color
	db '   ',key,alt_z,process,return_0,button_color,'   (ESC)   ',norm_color
	db '  ','      by alt key.                      ',eol

	db	blank_rows	;clear bottom rows
	db	0		;end of table
